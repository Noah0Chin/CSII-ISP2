import Scenes
import Igis
import Foundation
import ScenesControls


/*
     This class is responsible for the interaction Layer.
     Internally, it maintains the RenderableEntities for this layer.
   */


class MassShotInteractionLayer : Layer {
       
    let endGameTimer = Timer(enqueueScene:ScoreScene(), timeLimit: 30)
    var target : Target
    var destructionCount = 0
      init() {
          // Using a meaningful name can be helpful for debugging
          target = Target(center:Point(x:500,y:500), radiusX: 20, radiusY: 20)

          super.init(name:"Interaction")
          
          for _ in 0 ..< Int.random(in:1...2) {
                        let centerPoint = Point(x:Int.random(in:30 ... 1900), y:Int.random(in:30 ... 980))
              let radiusX = Int.random(in:10 ... 30)
              let radiusY = radiusX
              let velocity = Int.random(in:-2 ... 2)
              target = Target(center:centerPoint, radiusX: radiusX, radiusY: radiusY)
              insert(entity:target, at:.front)
              target.changeVelocity(velocityX: velocity, velocityY: velocity)             
          }     
          // We insert our RenderableEntities in the constructor
          insert(entity:endGameTimer, at: .front)
      }

      override func postCalculate(canvas: Canvas) {
          
      if target.isDestroyed() {
          destructionCount += 1
          print("bi")
      }
      print("hi")
      if destructionCount == 5 {
          director.enqueueScene(scene:MenuScene())
          director.transitionToNextScene()
      }
      }
  }
